name: m4i-data-dictionary-io-tests

services:
  broker:
    image: apache/kafka:latest
    environment:
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9094,CONTROLLER://broker:9093,LOCAL://broker:${KAFKA_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9094,LOCAL://localhost:${KAFKA_PORT}
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 100001200
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    healthcheck:
      test: /opt/kafka/bin/kafka-topics.sh --list --bootstrap-server broker:9094 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
    restart: unless-stopped

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    depends_on:
      broker:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9094'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
    restart: unless-stopped
    ports:
      - 8081
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '--output',
          '/dev/null',
          '--silent',
          '--head',
          '--fail',
          'http://schema-registry:8081/subjects',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
